<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="info:opensearch.dbc.dk#"
            xmlns="info:opensearch.dbc.dk#"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

  <xsd:element name="plugins">
    <xsd:annotation>
      <xsd:documentation>Root element for the plugin collection</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>        
      <xsd:sequence>
        <xsd:element name="plugin" type="pluginType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:complexType name="pluginType">
    
    <xsd:attribute name="name" use="required">
      <xsd:annotation>
        <xsd:documentation>
          Possible tasks for a given plugin: 
          
          - index: relates to indexing. Plugins of this type handles
          the process from indexable input format to the handing over
          of indexed data

          - transformation: The plugins handles transformation of a
          given input format into an indexable object/format

          - annotation: The plugin handles metadata or supplimentary
          data annotation to the indexable object
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    
    <xsd:attribute name="classname" use="required" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>
          Contains the qualified name of the plugin
          class. E.g. org.company.component.PluginType
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>

    <xsd:attribute name="type" use="required">
      <xsd:annotation>
        <xsd:documentation>
          Possible tasks for a given plugin: 
          
          - index: relates to indexing. Plugins of this type handles
          the process from indexable input format to the handing over
          of indexed data

          - transformation: The plugins handles transformation of a
          given input format into an indexable object/format

          - annotation: The plugin handles metadata or supplimentary
          data annotation to the indexable object
        </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="harvest"/>
          <xsd:enumeration value="annotate"/>
          <xsd:enumeration value="store"/>
          <xsd:enumeration value="index"/>
          <xsd:enumeration value="process"/>
          <xsd:enumeration value="retrieve"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    
  </xsd:complexType>
</xsd:schema>
